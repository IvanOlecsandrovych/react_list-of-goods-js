{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","GoodsList","goods","map","good","GoodCard","SORT_BY","App","useState","sortField","setSortField","reversed","setReversed","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAqBA,KAAMA,GAAZA,SAKfC,EAAW,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAAH,OACf,oBAAI,UAAQ,OAAZ,SAAoBA,KAGhBE,EACM,gBADNA,EAEI,SAFJA,EAGE,GA4BD,IAAMC,EAAM,WACjB,MAAkCC,mBAASF,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA5BR,SAA0BX,EAA1B,GAA2D,IAAxBO,EAAuB,EAAvBA,UAAWE,EAAY,EAAZA,SACxCG,EAAa,YAAOZ,GAqBxB,OAnBIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKH,EACH,OAAOU,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,IACFG,EAAgBA,EAAcM,WAGzBN,EAMcO,CACnBrB,EAAiB,CAAES,YAAWE,aAQhC,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMd,EAAaJ,IAC5BgB,UAAWb,IAAcH,EACrB,iBACA,0BALN,iCAWA,wBACEiB,KAAK,SACLC,QAAS,kBAAMd,EAAaJ,IAC5BgB,UAAWb,IAAcH,EACrB,oBACA,6BALN,4BAWA,wBACEiB,KAAK,SACLC,QAAS,kBAAMZ,GAAaD,IAC5BW,UAAWX,EACP,oBACA,6BALN,sBAWEF,GAAaE,IACb,wBACEY,KAAK,SACLC,QA5CI,WACZZ,GAAY,GACZF,EAAa,KA2CLY,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAWpB,MAAOW,QCpHxBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7552751d.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCard key={good} good={good} />\n    ))}\n  </ul>\n);\n\nconst GoodCard = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n\nconst SORT_BY = {\n  ALPHABET: 'alphabeticaly',\n  LENGTH: 'length',\n  NONE: '',\n};\n\nfunction getPreparedGoods(goods, { sortField, reversed }) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_BY.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(SORT_BY.NONE);\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, reversed },\n  );\n\n  const reset = () => {\n    setReversed(false);\n    setSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_BY.LENGTH)}\n          className={sortField === SORT_BY.LENGTH\n            ? 'button is-info'\n            : 'button is-info is-light'\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_BY.ALPHABET)}\n          className={sortField === SORT_BY.ALPHABET\n            ? 'button is-success'\n            : 'button is-success is-light'\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReversed(!reversed)}\n          className={reversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'\n          }\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            type=\"button\"\n            onClick={reset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}